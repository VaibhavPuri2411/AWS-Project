<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>üí∏ Personal Expense Tracker</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(135deg, #e0f7fa, #ffffff);
      margin: 0;
      padding: 40px;
      color: #2c3e50;
    }

    h1, h2 {
      text-align: center;
      color: #34495e;
    }

    form {
      max-width: 600px;
      margin: 20px auto;
      padding: 20px;
      background: white;
      border-radius: 12px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }

    input, button {
      width: calc(33% - 12px);
      padding: 12px;
      margin: 8px 6px;
      border-radius: 8px;
      border: 1px solid #ccc;
      font-size: 16px;
    }

    button {
      background-color: #2ecc71;
      color: white;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    button:hover {
      background-color: #27ae60;
    }

    .delete-btn {
      background-color: #e74c3c;
      color: white;
      border: none;
      padding: 12px;
      margin-top: 12px;
      border-radius: 8px;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    .delete-btn:hover {
      background-color: #c0392b;
    }

    #deleteForm input {
      width: 65%;
    }
    #deleteForm button {
      width: 30%;
    }

    /* Message styling */
    .message {
      text-align: center;
      margin-top: 12px;
      font-size: 18px;
      font-weight: bold;
      display: none; /* hidden by default */
    }
    .success {
      color: green;
    }
    .error {
      color: red;
    }
  </style>
</head>
<body>
  <h1>üí∏ Personal Expense Tracker</h1>

  <!-- Add Expense Form -->
  <form id="expenseForm">
    <input type="number" id="amount" placeholder="Amount" required />
    <input type="text" id="category" placeholder="Category" required />
    <input type="date" id="date" required />
    <button type="submit">Add Expense</button>
    <p id="expenseMessage" class="message"></p>
  </form>

  <!-- Delete Expense Form -->
  <h2>üóëÔ∏è Delete an Expense</h2>
  <form id="deleteForm">
    <input type="text" id="deleteId" placeholder="Enter Expense ID" required />
    <button type="submit" class="delete-btn">Delete</button>
    <p id="deleteMessage" class="message"></p>
  </form>

  <script>
    const API_BASE = 'https://q0gz8yufni.execute-api.ap-south-1.amazonaws.com/Vaibhav'; // Replace with your actual API URL

    // Submit New Expense
    document.getElementById('expenseForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      const amount = document.getElementById('amount').value;
      const category = document.getElementById('category').value;
      const date = document.getElementById('date').value;
      const msg = document.getElementById('expenseMessage');

      try {
        const res = await fetch(`${API_BASE}/expense`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ amount: Number(amount), category, date })
        });

        msg.style.display = "block"; // show message

        if (res.ok) {
          msg.textContent = "‚úÖ Successfully Expense Added!";
          msg.className = "message success";
          this.reset();
        } else {
          msg.textContent = "‚ùå Failed to add expense!";
          msg.className = "message error";
        }
      } catch (err) {
        msg.style.display = "block";
        msg.textContent = "‚ö†Ô∏è Error connecting to API!";
        msg.className = "message error";
      }
    });

    // Delete Expense by ID
    document.getElementById('deleteForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      const expenseId = document.getElementById('deleteId').value;
      const msg = document.getElementById('deleteMessage');

      try {
        const res = await fetch(`${API_BASE}/expense`, {
          method: 'DELETE',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ expense_id: expenseId })
        });

        msg.style.display = "block"; // show message

        if (res.ok) {
          msg.textContent = "üóëÔ∏è Expense deleted successfully!";
          msg.className = "message success";
          this.reset();
        } else {
          msg.textContent = "‚ùå Failed to delete expense!";
          msg.className = "message error";
        }
      } catch (err) {
        msg.style.display = "block";
        msg.textContent = "‚ö†Ô∏è Error connecting to API!";
        msg.className = "message error";
      }
    });
  </script>
</body>
</html>
